name: ehrgarden

services:
  db-gnuhealth:
    image: postgres:alpine3.20
    restart: always
    environment:
      POSTGRES_USER: gnuhealth
      POSTGRES_DB: health
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s 

  gnuhealth:
    depends_on:
      - db-gnuhealth
    build: ./ehr-garden/gnuhealth
    image: gnuhealth:4.4.0
    restart: always
    ports:
      - 127.0.0.1:8000:8000
    healthcheck:
      test: [ "CMD", "/home/gnuhealth/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s 

  db-openemr:
    image: mariadb:11.4.2
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: root
    volumes:
    - db-openemr-vol:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      interval: 30s
      timeout: 5s
      retries: 3

  openemr:
    depends_on:
      - db-openemr
    build: ./ehr-garden/openemr
    image: openemr:7.0.2
    restart: always
    environment:
      MYSQL_HOST: db-openemr
      MYSQL_ROOT_PASS: root
      MYSQL_USER: openemr
      MYSQL_PASS: openemr
      OE_USER: admin
      OE_PASS: pass
    ports:
      - 127.0.0.1:8001:8001
      - 127.0.0.1:8443:443
    volumes:
    - openemr-sitevolume:/var/www/localhost/htdocs/openemr/sites
    - openemr-logvolume01:/var/log

  vista:
    image: worldvista/vehu:201911-syn-fhir
    container_name: vehu
    ports:
      - 127.0.0.1:9080:9080
      
  fhir-vista:
    depends_on:
      - vista
    image: worldvista/fhir-on-vista:latest # sole tag on docker hub
    ulimits:
      nofile:
        soft: 8096
        hard: 8096
    ports:
      - 127.0.0.1:8002:8080

  db-openmrs:
    image: mariadb:11.4.2
    environment:
      MARIADB_DATABASE: openmrs
      MARIADB_USER: openmrs
      MARIADB_PASSWORD: openmrs
      MARIADB_ROOT_PASSWORD: openmrs
    volumes:
      - db-openmrs-vol:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      interval: 30s
      timeout: 5s
      retries: 3

  openmrs:
    depends_on:
      - db-openmrs
    build: ./ehr-garden/openmrs
    image: openmrs/openmrs-core:2.6.5
    restart: always
    environment:
      OMRS_DB_HOSTNAME: db-openmrs
      OMRS_DB_NAME: openmrs
      OMRS_DB_USERNAME: openmrsx
      OMRS_DB_PASSWORD: openmrs
      OMRS_ADMIN_USER_PASSWORD: Admin123
      OMRS_ADMIN_PASSWORD_LOCKED: true
    ports:
      - 127.0.0.1:8003:8080
    volumes:
      - openmrs-data:/openmrs/data/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      interval: 3s
      timeout: 5s
      retries: 3

  hapi-fhir:
    image: hapiproject/hapi:latest
    ports:
      - 127.0.0.1:8004:8080

  ibm-fhir:
    image: ghcr.io/linuxforhealth/fhir-server
    environment:
      BOOTSTRAP_DB: true
    ports:
      - 127.0.0.1:8005:9443

  blaze:
    image: samply/blaze:latest
    ports:
      - 127.0.0.1:8006:8080

  # Images after this are not FHIR images
  synthea:
    image: synthea
    build: ./ehr-garden/synthea
    ports:
      - 127.0.0.1:9000:9000
    volumes:
      - ./files:/synthea/output

  neo4j:
    image: neo4j:5.19.0-bullseye
    environment:
      NEO4J_AUTH: neo4j/fhir-garden
    ports:
      - 127.0.0.1:7474:7474
      - 127.0.0.1:7687:7687
    volumes:
      - neo4jvolume:/data
    profiles: 
      - neo4jDev
  
  neo4j-test:
    image: neo4j:5.19.0-bullseye
    container_name: neo4jTest
    environment:
      NEO4J_AUTH: neo4j/test-garden
    ports:
      - 127.0.0.1:7475:7474
      - 127.0.0.1:7688:7687
    volumes:
      - ./neo4jTest/data:/data
    profiles: 
      - neo4jTest

  java-json-echo:
    build: ./json-garden/java
    restart: always
    ports:
      - 127.0.0.1:8181:8080
    profiles: ["json"]      
  clojure-json-echo:
    build: ./json-garden/clojure
    restart: always
    ports:
      - 127.0.0.1:8282:3000
    profiles: ["json"]      
  python-json-echo:
    build: ./json-garden/python
    restart: always
    ports:
      - 127.0.0.1:8484:5000
    profiles: ["json"]      
  vista-json-echo:
    build: ./json-garden/vista
    restart: always
    ports:
      - 127.0.0.1:8383:9080
    profiles: ["json"]
  php-json-echo:
    build: ./json-garden/php
    restart: always
    ports:
      - 127.0.0.1:8585:80
    profiles: ["json"]


volumes:
  openemr-logvolume01: {}
  openemr-sitevolume: {}
  db-openemr-vol: {}
  db-openmrs-vol:
  openmrs-data:
  blaze-data:
  neo4jvolume: {}
  neo4jTestvolume: {}

